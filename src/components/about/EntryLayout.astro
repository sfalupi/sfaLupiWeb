---
import BaseLayout from "@components/base/BaseLayout.astro";
import { markdownify } from "@lib/textConverter";
import { Image } from "astro:assets";
import type { AboutEntry } from "@/types";
import { render } from "astro:content";

interface Props {
  entry: AboutEntry;
}

const { entry } = Astro.props;

// Add error handling for missing entry or entry data
if (!entry) {
  console.error('About entry is missing');
  return Astro.redirect('/404');
}

if (!entry.data) {
  console.error('About entry data is missing:', entry);
  return Astro.redirect('/404');
}

const { title, description, image, imageAlt } = entry.data;

// Safe rendering with error handling
let Content;
try {
  const rendered = await render(entry);
  Content = rendered.Content;
} catch (error) {
  console.error('Error rendering about entry:', error);
  return Astro.redirect('/404');
}

// Provide fallback values
const safeTitle = title || "About";
const safeDescription = description || "";
const safeImageAlt = imageAlt || "About image";
---

<BaseLayout title={safeTitle} description={safeDescription} image={image?.src}>
  <section class="section-sm">
    <div class="container">
      <div class="row justify-center">
        <div class="glass rounded-lg text-center p-8 md:col-10 lg:col-7 intersect:animate-fadeUp opacity-0 intersect-no-queue">
          {
            image && (
              <Image
                class="mx-auto mb-6 rounded-lg w-64"
                src={image}
                alt={safeImageAlt}
                width={1024}
                height={1024}
                loading="eager"
              />
            )
          }
          <h2 set:html={markdownify(safeTitle)} class="h3 mb-6" />
          {Content && <Content />}
        </div>
      </div>
    </div>
  </section>
</BaseLayout>