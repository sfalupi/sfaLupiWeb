---
import { Image } from "astro:assets";
import type { PixelArtsEntry } from "@/types";

interface Props {
  entry: PixelArtsEntry;
}

const { entry } = Astro.props;
const { title, image, imageAlt, downloadLink } = entry.data;

// Determine the link - use downloadLink if available, otherwise fallback to internal route
const linkUrl = downloadLink || `/pixelarts/${entry.id}`;
const isExternalLink = !!downloadLink;
---

<div
  class="h-full m-2 pl-0 bg-gradient-to-br gradient rounded-lg intersect:animate-fadeUp opacity-0"
>
  <div class="glass h-full rounded-lg">
    <a 
      class="group hover:opacity-100 block" 
      href={linkUrl}
      target={isExternalLink ? "_blank" : "_self"}
      rel={isExternalLink ? "noopener noreferrer" : ""}
      title={title}
    >
      <div class="relative rounded-lg pb-9/16 overflow-hidden">
        {
          image && (
            <Image
              class="absolute rounded-lg object-cover w-full h-full group-hover:scale-[105%] transition-all duration-300"
              src={image}
              alt={imageAlt}
              width={1280}
              height={720}
              loading="eager"
            />
          )
        }
        <!-- Optional: Add a subtle hover effect or download icon -->
        {isExternalLink && (
          <div class="absolute top-2 right-2 bg-black bg-opacity-50 rounded-full p-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
            <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
          </div>
        )}
      </div>
    </a>
  </div>
</div>